class LivestockHeadsController < ApplicationController
  before_action :set_livestock_head, only: [:show, :edit, :update, :destroy]

  # GET /livestock_heads
  # GET /livestock_heads.json
  def index
    @livestock_heads = LivestockHead.all
  end

  # GET /livestock_heads/1
  # GET /livestock_heads/1.json
  def show
  end

  def reports
    respond_to do |format|
      format.html
      format.pdf do
        render :pdf => "reports"
      end
    end   
  end

  # GET /livestock_heads/new
  def new
    @livestock_head = LivestockHead.new
    if !LivestockType.first
      redirect_to root_url, flash: { error: "Please create a Livestock type first!" }
    elsif !Pedigree.first
    redirect_to root_url, flash: { error: "Please create a breed first!" }
    end
  end

  # GET /livestock_heads/1/edit
  def edit
  end

  # POST /livestock_heads
  # POST /livestock_heads.json
  def create
    @livestock_head = LivestockHead.new(livestock_head_params)

    respond_to do |format|
      if @livestock_head.save
        format.html { redirect_to @livestock_head, notice: 'Livestock head was successfully created.' }
        format.json { render :show, status: :created, location: @livestock_head }
      else
        format.html { render :new }
        format.json { render json: @livestock_head.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /livestock_heads/1
  # PATCH/PUT /livestock_heads/1.json
  def update
    respond_to do |format|
      if @livestock_head.update(livestock_head_params)
        format.html { redirect_to @livestock_head, notice: 'Livestock head was successfully updated.' }
        format.json { render :show, status: :ok, location: @livestock_head }
      else
        format.html { render :edit }
        format.json { render json: @livestock_head.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /livestock_heads/1
  # DELETE /livestock_heads/1.json
  def destroy
    @livestock_head.destroy
    respond_to do |format|
      format.html { redirect_to livestock_heads_url, notice: 'Livestock head was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  # To import data from a CSV file
  # GET /livestock_heads/import
  def import
    begin
      errors = LivestockHead.import(params[:file])
      if errors
        redirect_to livestock_heads_path, alert: "#{errors.to_sentence}"
      else
        redirect_to livestock_heads_path, notice: 'Livestock heads imported.'
      end
    rescue Exception => e
      redirect_to livestock_heads_path, alert: "#{e.message}"
    end
  end

  # POST /livestock_heads/childs/1
  def childs
    parent = LivestockHead.find(params[:parent_id].to_i)
    @childs = parent.childs

    respond_to do |format|
      format.js {}
    end
  end 

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_livestock_head
      @livestock_head = LivestockHead.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def livestock_head_params
      params.require(:livestock_head).permit(:id_number, :livestock_type_id, :pedigree_id, :parent_id, :date_of_birth, :insurance_status, :farmer_id)
    end
end
